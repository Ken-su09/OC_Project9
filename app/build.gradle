plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'com.google.gms.google-services'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
    id 'org.jetbrains.kotlinx.kover'
}

android {
    compileSdk 33

    defaultConfig {
        applicationId "com.suonk.oc_project9"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11.toString()
        freeCompilerArgs = freeCompilerArgs + "-opt-in=kotlinx.coroutines.ExperimentalCoroutinesApi"
    }
//    testOptions {
//        unitTests.returnDefaultValues = true
//    }
    buildFeatures {
        viewBinding true
    }
    hilt {
        enableAggregatingTask = true
    }
    namespace 'com.suonk.oc_project9'
}

dependencies {
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'

    implementation "androidx.core:core-ktx:1.8.0"

    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    // MVVM
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.1'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.1'
    implementation 'androidx.fragment:fragment-ktx:1.5.2'

    // Room
    def room_version = "2.5.1"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // Glide
    implementation 'com.github.bumptech.glide:glide:4.13.0'

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.10.0'

    // Dagger - Hilt
    implementation 'com.google.dagger:hilt-android:2.44'
    kapt 'com.google.dagger:hilt-compiler:2.44'
    implementation 'androidx.hilt:hilt-work:1.0.0'

    // Firebase BoM
    implementation platform('com.google.firebase:firebase-bom:30.1.0')
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-auth'
    implementation 'com.google.android.gms:play-services-auth:20.5.0'
    implementation 'com.google.firebase:firebase-firestore:24.6.1'

    // Google Maps
    implementation 'com.google.android.gms:play-services-maps:18.1.0'
    implementation 'com.google.android.gms:play-services-location:21.0.1'

    // Unit tests
    testImplementation "androidx.arch.core:core-testing:2.2.0"
    testImplementation "androidx.arch.core:core-runtime:2.2.0"
    testImplementation "androidx.arch.core:core-common:2.2.0"

    testImplementation 'com.google.dagger:hilt-android-testing:2.38.1'
    testImplementation 'org.robolectric:robolectric:4.6'
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.10.0'
    testAnnotationProcessor 'com.google.dagger:hilt-android-compiler:2.38.1'
    testImplementation 'androidx.test:rules:1.5.0'

    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.7.0'
    testImplementation("org.junit.vintage:junit-vintage-engine:5.8.2")

    testImplementation("io.mockk:mockk:1.13.3")
    testImplementation "io.mockk:mockk-android:1.13.3"
    testImplementation "io.mockk:mockk-agent:1.13.3"
    testImplementation 'com.willowtreeapps.assertk:assertk-jvm:0.25'

    testImplementation 'app.cash.turbine:turbine:0.13.0'

    // UI Tests

    androidTestImplementation 'androidx.test:rules:1.5.0'

    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.5.1'
    androidTestImplementation 'com.google.dagger:hilt-android-testing:2.38.1'
    androidTestImplementation 'androidx.arch.core:core-testing:2.2.0'
    androidTestAnnotationProcessor 'com.google.dagger:hilt-android-compiler:2.38.1'
    androidTestUtil 'androidx.test:orchestrator:1.4.2'

    debugImplementation "androidx.fragment:fragment-testing:1.6.0"
}

koverAndroid {
    common {
        // filters for all report types of all build variants
        filters {
            excludes {
                annotatedBy(
                    "dagger.Module",
                    "dagger.internal.DaggerGenerated",
                    "androidx.room.Database",
                )
                packages(
                    "hilt_aggregated_deps", // Hilt: GeneratedInjectors (NOT annotated by DaggerGenerated)
                    "dagger.hilt.internal.aggregatedroot.codegen",
                    "com.suonk.oc_project9.databinding", // ViewBinding
                )
                classes(
                    // Hilt
                    // TODO Nino Delete when this is fixed: https://github.com/Kotlin/kotlinx-kover/issues/331
                    "*_*Factory\$*",

                    // Room
                    "*_Impl",
                    "*_Impl\$*",

                    // TODO Nino Delete when this is fixed: https://github.com/Kotlin/kotlinx-kover/issues/331
                    "*AppDatabase\$*",

                    // Gradle Generated
                    "com.suonk.oc_project9.BuildConfig", // TODO Nino: Why Kover doesn't understand tests on BuildConfig ?!

                    // TODO Nino: Remove below when Kover can handle Android integration tests!
                    // Android UI
                    "*di.App",
                    "*Fragment",
                    "*Fragment\$*",
                    "*Activity",
                    "*Activity\$*",
                    "*Adapter",
                    "*Adapter\$*",
                )
            }
        }
    }
}
